syntax = "proto3";

//option go_package = "github.com/chezky/changeproto/db_service";

package proto;

message GlobalSuccessReply {
    bool success = 1;
}

message UserSignUp {
    string email = 1;
    string password = 2;
    string user_token = 4;
    string plaid_public_token = 5;
    string plaid_account_id = 6;
    int32 key = 8;
    int32 mask = 9;
    string bank_name = 10;
}

service UserSignUpService {
    rpc SendUserSignUp (UserSignUp) returns (GlobalSuccessReply) {}
}

message OrgSignUp {
    string name = 1;
    string email = 2;
    string password = 3;
    int32 ein = 4;
    string org_token = 5;
    string plaid_public_token = 6;
    string plaid_account_id = 7;
    int32 key = 8;
}

service OrgSignUpService {
    rpc SendOrgSignUp (OrgSignUp) returns (GlobalSuccessReply) {}
}

service CheckUserSignUpService {
    rpc CheckUserSignUp (UserSignUp) returns (GlobalSuccessReply) {}
}

service CheckOrgSignUpService {
    rpc CheckOrgSignUp (OrgSignUp) returns (GlobalSuccessReply) {}
}

message ResendEmailAuthMsg {
    string token = 1;
    string table = 2;
}

service ResendEmailAuthService {
    rpc ResendEmailAuth (ResendEmailAuthMsg) returns (GlobalSuccessReply) {}
}

message Login {
    string email = 1;
    string password = 2;
    string user_token = 3;
    string table = 4;
}

service AuthLoginService{
    rpc AuthLogin (Login) returns (GlobalSuccessReply) {}
}

message TransactionItemID {
    string item_id = 1;
}

service BeginTransactionWHService{
    rpc BeginTransactionWH (TransactionItemID) returns (GlobalSuccessReply) {}
}

message StripeChargeID {
    string charge_id = 1;
}

service ConfirmTransferService{
    rpc ConfirmTransfer (StripeChargeID) returns (GlobalSuccessReply) {}
}

message OrgName {
    string name = 1;
    int32 offset = 2;
}

message OrgNameReply {
    repeated string names = 1;
}

service SearchOrgNameService {
    rpc SearchOrgName (OrgName) returns (OrgNameReply) {}
}

message TransferPDFParams {
    // add start and end date
    string user_token = 1;
}

service TransferPDFService {
    rpc TransferPDF (TransferPDFParams) returns (GlobalSuccessReply) {}
}

message SaveLogoMsg {
    string org_token = 1;
    string file_location = 2;
}

service SaveLogoService {
    rpc SaveLogo (SaveLogoMsg) returns (GlobalSuccessReply) {}
}

message GetTransactionsMsg {
    string user_token = 1;
    int32 offset = 2;
}

message GetTransactionsMsgReply {
    repeated TransactionData transactions = 1;
}

message TransactionData {
    string name = 1;
    string dot = 2;
    double amount = 3;
    int32 change = 4;
}

service GetTransactionsService {
    rpc GetTransactions (GetTransactionsMsg) returns (GetTransactionsMsgReply) {}
}


message UpdateThresholdMsg {
    string user_token = 1;
    int32 threshold = 2;
}

service UpdateThresholdService {
    rpc UpdateThreshold (UpdateThresholdMsg) returns (GlobalSuccessReply) {}
}

message UserToken {
    string user_token = 1;
}

message UsersOrgInfoReply {
    string name = 1;
    string logo_location = 2;
}

service GetUsersOrgInfoService {
    rpc GetUsersOrgInfo (UserToken) returns (UsersOrgInfoReply) {}
}

message UsersTotalsReply {
    int64 monthly_total = 1;
    int64 weekly_total = 2;
}

service GetUsersTotalsService {
    rpc GetUsersTotals (UserToken) returns (UsersTotalsReply) {}
}

message UsersProfileReply {
    int32 threshold = 1;
    int32 mask = 2;
    string bank_name = 3;
}

service GetUsersProfileService {
    rpc GetUsersProfile (UserToken) returns (UsersProfileReply) {}
}

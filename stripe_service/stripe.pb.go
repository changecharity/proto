// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.3
// source: stripe.proto

//option go_package = "github.com/chezky/changeproto/db_service";

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type StripeEmpty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StripeEmpty) Reset() {
	*x = StripeEmpty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stripe_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StripeEmpty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StripeEmpty) ProtoMessage() {}

func (x *StripeEmpty) ProtoReflect() protoreflect.Message {
	mi := &file_stripe_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StripeEmpty.ProtoReflect.Descriptor instead.
func (*StripeEmpty) Descriptor() ([]byte, []int) {
	return file_stripe_proto_rawDescGZIP(), []int{0}
}

type StripeBool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *StripeBool) Reset() {
	*x = StripeBool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stripe_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StripeBool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StripeBool) ProtoMessage() {}

func (x *StripeBool) ProtoReflect() protoreflect.Message {
	mi := &file_stripe_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StripeBool.ProtoReflect.Descriptor instead.
func (*StripeBool) Descriptor() ([]byte, []int) {
	return file_stripe_proto_rawDescGZIP(), []int{1}
}

func (x *StripeBool) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type CreateCusOrAcc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StripeToken string `protobuf:"bytes,1,opt,name=stripe_token,json=stripeToken,proto3" json:"stripe_token,omitempty"`
	Email       string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *CreateCusOrAcc) Reset() {
	*x = CreateCusOrAcc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stripe_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCusOrAcc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCusOrAcc) ProtoMessage() {}

func (x *CreateCusOrAcc) ProtoReflect() protoreflect.Message {
	mi := &file_stripe_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCusOrAcc.ProtoReflect.Descriptor instead.
func (*CreateCusOrAcc) Descriptor() ([]byte, []int) {
	return file_stripe_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCusOrAcc) GetStripeToken() string {
	if x != nil {
		return x.StripeToken
	}
	return ""
}

func (x *CreateCusOrAcc) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type CreateCusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
}

func (x *CreateCusReply) Reset() {
	*x = CreateCusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stripe_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCusReply) ProtoMessage() {}

func (x *CreateCusReply) ProtoReflect() protoreflect.Message {
	mi := &file_stripe_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCusReply.ProtoReflect.Descriptor instead.
func (*CreateCusReply) Descriptor() ([]byte, []int) {
	return file_stripe_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCusReply) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

type CreateAccReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *CreateAccReply) Reset() {
	*x = CreateAccReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stripe_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAccReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAccReply) ProtoMessage() {}

func (x *CreateAccReply) ProtoReflect() protoreflect.Message {
	mi := &file_stripe_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAccReply.ProtoReflect.Descriptor instead.
func (*CreateAccReply) Descriptor() ([]byte, []int) {
	return file_stripe_proto_rawDescGZIP(), []int{4}
}

func (x *CreateAccReply) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type WHCreateTransferData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	AccountId  string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Amount     int32  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *WHCreateTransferData) Reset() {
	*x = WHCreateTransferData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stripe_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WHCreateTransferData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WHCreateTransferData) ProtoMessage() {}

func (x *WHCreateTransferData) ProtoReflect() protoreflect.Message {
	mi := &file_stripe_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WHCreateTransferData.ProtoReflect.Descriptor instead.
func (*WHCreateTransferData) Descriptor() ([]byte, []int) {
	return file_stripe_proto_rawDescGZIP(), []int{5}
}

func (x *WHCreateTransferData) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *WHCreateTransferData) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *WHCreateTransferData) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type WHCreateTransferDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChargeId         string `protobuf:"bytes,1,opt,name=charge_id,json=chargeId,proto3" json:"charge_id,omitempty"`
	TransferId       string `protobuf:"bytes,2,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"`
	TransferedAmount int64  `protobuf:"varint,3,opt,name=transfered_amount,json=transferedAmount,proto3" json:"transfered_amount,omitempty"`
}

func (x *WHCreateTransferDataReply) Reset() {
	*x = WHCreateTransferDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stripe_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WHCreateTransferDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WHCreateTransferDataReply) ProtoMessage() {}

func (x *WHCreateTransferDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_stripe_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WHCreateTransferDataReply.ProtoReflect.Descriptor instead.
func (*WHCreateTransferDataReply) Descriptor() ([]byte, []int) {
	return file_stripe_proto_rawDescGZIP(), []int{6}
}

func (x *WHCreateTransferDataReply) GetChargeId() string {
	if x != nil {
		return x.ChargeId
	}
	return ""
}

func (x *WHCreateTransferDataReply) GetTransferId() string {
	if x != nil {
		return x.TransferId
	}
	return ""
}

func (x *WHCreateTransferDataReply) GetTransferedAmount() int64 {
	if x != nil {
		return x.TransferedAmount
	}
	return 0
}

type DeleteCusBAMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomerId  string `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	StripeToken string `protobuf:"bytes,2,opt,name=stripe_token,json=stripeToken,proto3" json:"stripe_token,omitempty"`
	BaCount     int32  `protobuf:"varint,3,opt,name=ba_count,json=baCount,proto3" json:"ba_count,omitempty"`
}

func (x *DeleteCusBAMsg) Reset() {
	*x = DeleteCusBAMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stripe_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCusBAMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCusBAMsg) ProtoMessage() {}

func (x *DeleteCusBAMsg) ProtoReflect() protoreflect.Message {
	mi := &file_stripe_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCusBAMsg.ProtoReflect.Descriptor instead.
func (*DeleteCusBAMsg) Descriptor() ([]byte, []int) {
	return file_stripe_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteCusBAMsg) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *DeleteCusBAMsg) GetStripeToken() string {
	if x != nil {
		return x.StripeToken
	}
	return ""
}

func (x *DeleteCusBAMsg) GetBaCount() int32 {
	if x != nil {
		return x.BaCount
	}
	return 0
}

type AddCusBAReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaCount int32 `protobuf:"varint,1,opt,name=ba_count,json=baCount,proto3" json:"ba_count,omitempty"`
}

func (x *AddCusBAReply) Reset() {
	*x = AddCusBAReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stripe_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCusBAReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCusBAReply) ProtoMessage() {}

func (x *AddCusBAReply) ProtoReflect() protoreflect.Message {
	mi := &file_stripe_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCusBAReply.ProtoReflect.Descriptor instead.
func (*AddCusBAReply) Descriptor() ([]byte, []int) {
	return file_stripe_proto_rawDescGZIP(), []int{8}
}

func (x *AddCusBAReply) GetBaCount() int32 {
	if x != nil {
		return x.BaCount
	}
	return 0
}

type ResendTos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email     string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *ResendTos) Reset() {
	*x = ResendTos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stripe_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendTos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendTos) ProtoMessage() {}

func (x *ResendTos) ProtoReflect() protoreflect.Message {
	mi := &file_stripe_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendTos.ProtoReflect.Descriptor instead.
func (*ResendTos) Descriptor() ([]byte, []int) {
	return file_stripe_proto_rawDescGZIP(), []int{9}
}

func (x *ResendTos) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ResendTos) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

var File_stripe_proto protoreflect.FileDescriptor

var file_stripe_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0d, 0x0a, 0x0b, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x24, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x42, 0x6f,
	0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x49, 0x0a, 0x0e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x4f, 0x72, 0x41, 0x63, 0x63, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x31, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x6e, 0x0a, 0x14, 0x57, 0x48, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x19, 0x57, 0x48,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x6f, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x42,
	0x41, 0x4d, 0x73, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x70, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72,
	0x69, 0x70, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x61, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x2a, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x42, 0x41, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x40, 0x0a, 0x09, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x32, 0x4f, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x75, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x75, 0x73, 0x4f, 0x72, 0x41, 0x63, 0x63, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x32, 0x57, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x65,
	0x43, 0x75, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x75, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x4f, 0x72, 0x41,
	0x63, 0x63, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0x4f, 0x0a, 0x10, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x3b, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x63, 0x12, 0x15, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x4f, 0x72,
	0x41, 0x63, 0x63, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x63, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x32, 0x72, 0x0a, 0x19,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x57, 0x48, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x12, 0x46, 0x69, 0x6e,
	0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x48, 0x12,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x48, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x20, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x48, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x32, 0x50, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x42, 0x41, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x42, 0x41, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x42, 0x41, 0x4d, 0x73, 0x67, 0x1a, 0x12, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x32, 0x4c, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x42, 0x41, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x42,
	0x41, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x42, 0x41, 0x4d, 0x73, 0x67, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x64, 0x64, 0x43, 0x75, 0x73, 0x42, 0x41, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x32, 0x55, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x6f, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x10, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x73, 0x12,
	0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x6f,
	0x73, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32, 0x52, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x41, 0x63, 0x63, 0x43, 0x61, 0x70, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x38, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x63, 0x63, 0x43, 0x61, 0x70,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x65, 0x6e, 0x64, 0x54, 0x6f, 0x73, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x70, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_stripe_proto_rawDescOnce sync.Once
	file_stripe_proto_rawDescData = file_stripe_proto_rawDesc
)

func file_stripe_proto_rawDescGZIP() []byte {
	file_stripe_proto_rawDescOnce.Do(func() {
		file_stripe_proto_rawDescData = protoimpl.X.CompressGZIP(file_stripe_proto_rawDescData)
	})
	return file_stripe_proto_rawDescData
}

var file_stripe_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_stripe_proto_goTypes = []interface{}{
	(*StripeEmpty)(nil),               // 0: proto.StripeEmpty
	(*StripeBool)(nil),                // 1: proto.StripeBool
	(*CreateCusOrAcc)(nil),            // 2: proto.CreateCusOrAcc
	(*CreateCusReply)(nil),            // 3: proto.CreateCusReply
	(*CreateAccReply)(nil),            // 4: proto.CreateAccReply
	(*WHCreateTransferData)(nil),      // 5: proto.WHCreateTransferData
	(*WHCreateTransferDataReply)(nil), // 6: proto.WHCreateTransferDataReply
	(*DeleteCusBAMsg)(nil),            // 7: proto.DeleteCusBAMsg
	(*AddCusBAReply)(nil),             // 8: proto.AddCusBAReply
	(*ResendTos)(nil),                 // 9: proto.ResendTos
}
var file_stripe_proto_depIdxs = []int32{
	2, // 0: proto.CreateCusService.CreateCus:input_type -> proto.CreateCusOrAcc
	2, // 1: proto.CreateBaseCusService.CreateBaseCus:input_type -> proto.CreateCusOrAcc
	2, // 2: proto.CreateAccService.CreateAcc:input_type -> proto.CreateCusOrAcc
	5, // 3: proto.FinalTransactionWHService.FinalTransactionWH:input_type -> proto.WHCreateTransferData
	7, // 4: proto.DeleteCusBAService.DeleteCusBA:input_type -> proto.DeleteCusBAMsg
	7, // 5: proto.AddCusBAService.AddCusBA:input_type -> proto.DeleteCusBAMsg
	9, // 6: proto.CreateAndSendTosService.CreateAndSendTos:input_type -> proto.ResendTos
	9, // 7: proto.CheckAccCapableService.CheckAccCapable:input_type -> proto.ResendTos
	3, // 8: proto.CreateCusService.CreateCus:output_type -> proto.CreateCusReply
	3, // 9: proto.CreateBaseCusService.CreateBaseCus:output_type -> proto.CreateCusReply
	4, // 10: proto.CreateAccService.CreateAcc:output_type -> proto.CreateAccReply
	6, // 11: proto.FinalTransactionWHService.FinalTransactionWH:output_type -> proto.WHCreateTransferDataReply
	0, // 12: proto.DeleteCusBAService.DeleteCusBA:output_type -> proto.StripeEmpty
	8, // 13: proto.AddCusBAService.AddCusBA:output_type -> proto.AddCusBAReply
	0, // 14: proto.CreateAndSendTosService.CreateAndSendTos:output_type -> proto.StripeEmpty
	1, // 15: proto.CheckAccCapableService.CheckAccCapable:output_type -> proto.StripeBool
	8, // [8:16] is the sub-list for method output_type
	0, // [0:8] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_stripe_proto_init() }
func file_stripe_proto_init() {
	if File_stripe_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_stripe_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StripeEmpty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stripe_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StripeBool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stripe_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCusOrAcc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stripe_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stripe_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAccReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stripe_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WHCreateTransferData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stripe_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WHCreateTransferDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stripe_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCusBAMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stripe_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCusBAReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stripe_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendTos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stripe_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   8,
		},
		GoTypes:           file_stripe_proto_goTypes,
		DependencyIndexes: file_stripe_proto_depIdxs,
		MessageInfos:      file_stripe_proto_msgTypes,
	}.Build()
	File_stripe_proto = out.File
	file_stripe_proto_rawDesc = nil
	file_stripe_proto_goTypes = nil
	file_stripe_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CreateCusServiceClient is the client API for CreateCusService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CreateCusServiceClient interface {
	CreateCus(ctx context.Context, in *CreateCusOrAcc, opts ...grpc.CallOption) (*CreateCusReply, error)
}

type createCusServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCreateCusServiceClient(cc grpc.ClientConnInterface) CreateCusServiceClient {
	return &createCusServiceClient{cc}
}

func (c *createCusServiceClient) CreateCus(ctx context.Context, in *CreateCusOrAcc, opts ...grpc.CallOption) (*CreateCusReply, error) {
	out := new(CreateCusReply)
	err := c.cc.Invoke(ctx, "/proto.CreateCusService/CreateCus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CreateCusServiceServer is the server API for CreateCusService service.
type CreateCusServiceServer interface {
	CreateCus(context.Context, *CreateCusOrAcc) (*CreateCusReply, error)
}

// UnimplementedCreateCusServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCreateCusServiceServer struct {
}

func (*UnimplementedCreateCusServiceServer) CreateCus(context.Context, *CreateCusOrAcc) (*CreateCusReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCus not implemented")
}

func RegisterCreateCusServiceServer(s *grpc.Server, srv CreateCusServiceServer) {
	s.RegisterService(&_CreateCusService_serviceDesc, srv)
}

func _CreateCusService_CreateCus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCusOrAcc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreateCusServiceServer).CreateCus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CreateCusService/CreateCus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreateCusServiceServer).CreateCus(ctx, req.(*CreateCusOrAcc))
	}
	return interceptor(ctx, in, info, handler)
}

var _CreateCusService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.CreateCusService",
	HandlerType: (*CreateCusServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCus",
			Handler:    _CreateCusService_CreateCus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stripe.proto",
}

// CreateBaseCusServiceClient is the client API for CreateBaseCusService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CreateBaseCusServiceClient interface {
	CreateBaseCus(ctx context.Context, in *CreateCusOrAcc, opts ...grpc.CallOption) (*CreateCusReply, error)
}

type createBaseCusServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCreateBaseCusServiceClient(cc grpc.ClientConnInterface) CreateBaseCusServiceClient {
	return &createBaseCusServiceClient{cc}
}

func (c *createBaseCusServiceClient) CreateBaseCus(ctx context.Context, in *CreateCusOrAcc, opts ...grpc.CallOption) (*CreateCusReply, error) {
	out := new(CreateCusReply)
	err := c.cc.Invoke(ctx, "/proto.CreateBaseCusService/CreateBaseCus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CreateBaseCusServiceServer is the server API for CreateBaseCusService service.
type CreateBaseCusServiceServer interface {
	CreateBaseCus(context.Context, *CreateCusOrAcc) (*CreateCusReply, error)
}

// UnimplementedCreateBaseCusServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCreateBaseCusServiceServer struct {
}

func (*UnimplementedCreateBaseCusServiceServer) CreateBaseCus(context.Context, *CreateCusOrAcc) (*CreateCusReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBaseCus not implemented")
}

func RegisterCreateBaseCusServiceServer(s *grpc.Server, srv CreateBaseCusServiceServer) {
	s.RegisterService(&_CreateBaseCusService_serviceDesc, srv)
}

func _CreateBaseCusService_CreateBaseCus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCusOrAcc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreateBaseCusServiceServer).CreateBaseCus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CreateBaseCusService/CreateBaseCus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreateBaseCusServiceServer).CreateBaseCus(ctx, req.(*CreateCusOrAcc))
	}
	return interceptor(ctx, in, info, handler)
}

var _CreateBaseCusService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.CreateBaseCusService",
	HandlerType: (*CreateBaseCusServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBaseCus",
			Handler:    _CreateBaseCusService_CreateBaseCus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stripe.proto",
}

// CreateAccServiceClient is the client API for CreateAccService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CreateAccServiceClient interface {
	CreateAcc(ctx context.Context, in *CreateCusOrAcc, opts ...grpc.CallOption) (*CreateAccReply, error)
}

type createAccServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCreateAccServiceClient(cc grpc.ClientConnInterface) CreateAccServiceClient {
	return &createAccServiceClient{cc}
}

func (c *createAccServiceClient) CreateAcc(ctx context.Context, in *CreateCusOrAcc, opts ...grpc.CallOption) (*CreateAccReply, error) {
	out := new(CreateAccReply)
	err := c.cc.Invoke(ctx, "/proto.CreateAccService/CreateAcc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CreateAccServiceServer is the server API for CreateAccService service.
type CreateAccServiceServer interface {
	CreateAcc(context.Context, *CreateCusOrAcc) (*CreateAccReply, error)
}

// UnimplementedCreateAccServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCreateAccServiceServer struct {
}

func (*UnimplementedCreateAccServiceServer) CreateAcc(context.Context, *CreateCusOrAcc) (*CreateAccReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAcc not implemented")
}

func RegisterCreateAccServiceServer(s *grpc.Server, srv CreateAccServiceServer) {
	s.RegisterService(&_CreateAccService_serviceDesc, srv)
}

func _CreateAccService_CreateAcc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCusOrAcc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreateAccServiceServer).CreateAcc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CreateAccService/CreateAcc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreateAccServiceServer).CreateAcc(ctx, req.(*CreateCusOrAcc))
	}
	return interceptor(ctx, in, info, handler)
}

var _CreateAccService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.CreateAccService",
	HandlerType: (*CreateAccServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAcc",
			Handler:    _CreateAccService_CreateAcc_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stripe.proto",
}

// FinalTransactionWHServiceClient is the client API for FinalTransactionWHService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FinalTransactionWHServiceClient interface {
	FinalTransactionWH(ctx context.Context, in *WHCreateTransferData, opts ...grpc.CallOption) (*WHCreateTransferDataReply, error)
}

type finalTransactionWHServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFinalTransactionWHServiceClient(cc grpc.ClientConnInterface) FinalTransactionWHServiceClient {
	return &finalTransactionWHServiceClient{cc}
}

func (c *finalTransactionWHServiceClient) FinalTransactionWH(ctx context.Context, in *WHCreateTransferData, opts ...grpc.CallOption) (*WHCreateTransferDataReply, error) {
	out := new(WHCreateTransferDataReply)
	err := c.cc.Invoke(ctx, "/proto.FinalTransactionWHService/FinalTransactionWH", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FinalTransactionWHServiceServer is the server API for FinalTransactionWHService service.
type FinalTransactionWHServiceServer interface {
	FinalTransactionWH(context.Context, *WHCreateTransferData) (*WHCreateTransferDataReply, error)
}

// UnimplementedFinalTransactionWHServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFinalTransactionWHServiceServer struct {
}

func (*UnimplementedFinalTransactionWHServiceServer) FinalTransactionWH(context.Context, *WHCreateTransferData) (*WHCreateTransferDataReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FinalTransactionWH not implemented")
}

func RegisterFinalTransactionWHServiceServer(s *grpc.Server, srv FinalTransactionWHServiceServer) {
	s.RegisterService(&_FinalTransactionWHService_serviceDesc, srv)
}

func _FinalTransactionWHService_FinalTransactionWH_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WHCreateTransferData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FinalTransactionWHServiceServer).FinalTransactionWH(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FinalTransactionWHService/FinalTransactionWH",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FinalTransactionWHServiceServer).FinalTransactionWH(ctx, req.(*WHCreateTransferData))
	}
	return interceptor(ctx, in, info, handler)
}

var _FinalTransactionWHService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.FinalTransactionWHService",
	HandlerType: (*FinalTransactionWHServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FinalTransactionWH",
			Handler:    _FinalTransactionWHService_FinalTransactionWH_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stripe.proto",
}

// DeleteCusBAServiceClient is the client API for DeleteCusBAService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeleteCusBAServiceClient interface {
	DeleteCusBA(ctx context.Context, in *DeleteCusBAMsg, opts ...grpc.CallOption) (*StripeEmpty, error)
}

type deleteCusBAServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDeleteCusBAServiceClient(cc grpc.ClientConnInterface) DeleteCusBAServiceClient {
	return &deleteCusBAServiceClient{cc}
}

func (c *deleteCusBAServiceClient) DeleteCusBA(ctx context.Context, in *DeleteCusBAMsg, opts ...grpc.CallOption) (*StripeEmpty, error) {
	out := new(StripeEmpty)
	err := c.cc.Invoke(ctx, "/proto.DeleteCusBAService/DeleteCusBA", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeleteCusBAServiceServer is the server API for DeleteCusBAService service.
type DeleteCusBAServiceServer interface {
	DeleteCusBA(context.Context, *DeleteCusBAMsg) (*StripeEmpty, error)
}

// UnimplementedDeleteCusBAServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDeleteCusBAServiceServer struct {
}

func (*UnimplementedDeleteCusBAServiceServer) DeleteCusBA(context.Context, *DeleteCusBAMsg) (*StripeEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCusBA not implemented")
}

func RegisterDeleteCusBAServiceServer(s *grpc.Server, srv DeleteCusBAServiceServer) {
	s.RegisterService(&_DeleteCusBAService_serviceDesc, srv)
}

func _DeleteCusBAService_DeleteCusBA_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCusBAMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeleteCusBAServiceServer).DeleteCusBA(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DeleteCusBAService/DeleteCusBA",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeleteCusBAServiceServer).DeleteCusBA(ctx, req.(*DeleteCusBAMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeleteCusBAService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.DeleteCusBAService",
	HandlerType: (*DeleteCusBAServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeleteCusBA",
			Handler:    _DeleteCusBAService_DeleteCusBA_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stripe.proto",
}

// AddCusBAServiceClient is the client API for AddCusBAService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AddCusBAServiceClient interface {
	AddCusBA(ctx context.Context, in *DeleteCusBAMsg, opts ...grpc.CallOption) (*AddCusBAReply, error)
}

type addCusBAServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAddCusBAServiceClient(cc grpc.ClientConnInterface) AddCusBAServiceClient {
	return &addCusBAServiceClient{cc}
}

func (c *addCusBAServiceClient) AddCusBA(ctx context.Context, in *DeleteCusBAMsg, opts ...grpc.CallOption) (*AddCusBAReply, error) {
	out := new(AddCusBAReply)
	err := c.cc.Invoke(ctx, "/proto.AddCusBAService/AddCusBA", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AddCusBAServiceServer is the server API for AddCusBAService service.
type AddCusBAServiceServer interface {
	AddCusBA(context.Context, *DeleteCusBAMsg) (*AddCusBAReply, error)
}

// UnimplementedAddCusBAServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAddCusBAServiceServer struct {
}

func (*UnimplementedAddCusBAServiceServer) AddCusBA(context.Context, *DeleteCusBAMsg) (*AddCusBAReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCusBA not implemented")
}

func RegisterAddCusBAServiceServer(s *grpc.Server, srv AddCusBAServiceServer) {
	s.RegisterService(&_AddCusBAService_serviceDesc, srv)
}

func _AddCusBAService_AddCusBA_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCusBAMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddCusBAServiceServer).AddCusBA(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AddCusBAService/AddCusBA",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddCusBAServiceServer).AddCusBA(ctx, req.(*DeleteCusBAMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _AddCusBAService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AddCusBAService",
	HandlerType: (*AddCusBAServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddCusBA",
			Handler:    _AddCusBAService_AddCusBA_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stripe.proto",
}

// CreateAndSendTosServiceClient is the client API for CreateAndSendTosService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CreateAndSendTosServiceClient interface {
	CreateAndSendTos(ctx context.Context, in *ResendTos, opts ...grpc.CallOption) (*StripeEmpty, error)
}

type createAndSendTosServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCreateAndSendTosServiceClient(cc grpc.ClientConnInterface) CreateAndSendTosServiceClient {
	return &createAndSendTosServiceClient{cc}
}

func (c *createAndSendTosServiceClient) CreateAndSendTos(ctx context.Context, in *ResendTos, opts ...grpc.CallOption) (*StripeEmpty, error) {
	out := new(StripeEmpty)
	err := c.cc.Invoke(ctx, "/proto.CreateAndSendTosService/CreateAndSendTos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CreateAndSendTosServiceServer is the server API for CreateAndSendTosService service.
type CreateAndSendTosServiceServer interface {
	CreateAndSendTos(context.Context, *ResendTos) (*StripeEmpty, error)
}

// UnimplementedCreateAndSendTosServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCreateAndSendTosServiceServer struct {
}

func (*UnimplementedCreateAndSendTosServiceServer) CreateAndSendTos(context.Context, *ResendTos) (*StripeEmpty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAndSendTos not implemented")
}

func RegisterCreateAndSendTosServiceServer(s *grpc.Server, srv CreateAndSendTosServiceServer) {
	s.RegisterService(&_CreateAndSendTosService_serviceDesc, srv)
}

func _CreateAndSendTosService_CreateAndSendTos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResendTos)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreateAndSendTosServiceServer).CreateAndSendTos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CreateAndSendTosService/CreateAndSendTos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreateAndSendTosServiceServer).CreateAndSendTos(ctx, req.(*ResendTos))
	}
	return interceptor(ctx, in, info, handler)
}

var _CreateAndSendTosService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.CreateAndSendTosService",
	HandlerType: (*CreateAndSendTosServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAndSendTos",
			Handler:    _CreateAndSendTosService_CreateAndSendTos_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stripe.proto",
}

// CheckAccCapableServiceClient is the client API for CheckAccCapableService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CheckAccCapableServiceClient interface {
	CheckAccCapable(ctx context.Context, in *ResendTos, opts ...grpc.CallOption) (*StripeBool, error)
}

type checkAccCapableServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCheckAccCapableServiceClient(cc grpc.ClientConnInterface) CheckAccCapableServiceClient {
	return &checkAccCapableServiceClient{cc}
}

func (c *checkAccCapableServiceClient) CheckAccCapable(ctx context.Context, in *ResendTos, opts ...grpc.CallOption) (*StripeBool, error) {
	out := new(StripeBool)
	err := c.cc.Invoke(ctx, "/proto.CheckAccCapableService/CheckAccCapable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CheckAccCapableServiceServer is the server API for CheckAccCapableService service.
type CheckAccCapableServiceServer interface {
	CheckAccCapable(context.Context, *ResendTos) (*StripeBool, error)
}

// UnimplementedCheckAccCapableServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCheckAccCapableServiceServer struct {
}

func (*UnimplementedCheckAccCapableServiceServer) CheckAccCapable(context.Context, *ResendTos) (*StripeBool, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckAccCapable not implemented")
}

func RegisterCheckAccCapableServiceServer(s *grpc.Server, srv CheckAccCapableServiceServer) {
	s.RegisterService(&_CheckAccCapableService_serviceDesc, srv)
}

func _CheckAccCapableService_CheckAccCapable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResendTos)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckAccCapableServiceServer).CheckAccCapable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CheckAccCapableService/CheckAccCapable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckAccCapableServiceServer).CheckAccCapable(ctx, req.(*ResendTos))
	}
	return interceptor(ctx, in, info, handler)
}

var _CheckAccCapableService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.CheckAccCapableService",
	HandlerType: (*CheckAccCapableServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckAccCapable",
			Handler:    _CheckAccCapableService_CheckAccCapable_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "stripe.proto",
}

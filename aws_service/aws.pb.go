// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.11.3
// source: aws.proto

//option go_package = ".;proto";

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type QRData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
}

func (x *QRData) Reset() {
	*x = QRData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QRData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QRData) ProtoMessage() {}

func (x *QRData) ProtoReflect() protoreflect.Message {
	mi := &file_aws_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QRData.ProtoReflect.Descriptor instead.
func (*QRData) Descriptor() ([]byte, []int) {
	return file_aws_proto_rawDescGZIP(), []int{0}
}

func (x *QRData) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

type QRDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
}

func (x *QRDataReply) Reset() {
	*x = QRDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QRDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QRDataReply) ProtoMessage() {}

func (x *QRDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_aws_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QRDataReply.ProtoReflect.Descriptor instead.
func (*QRDataReply) Descriptor() ([]byte, []int) {
	return file_aws_proto_rawDescGZIP(), []int{1}
}

func (x *QRDataReply) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type LogoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*LogoData_OrgToken
	//	*LogoData_ImageData
	Data isLogoData_Data `protobuf_oneof:"data"`
}

func (x *LogoData) Reset() {
	*x = LogoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoData) ProtoMessage() {}

func (x *LogoData) ProtoReflect() protoreflect.Message {
	mi := &file_aws_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoData.ProtoReflect.Descriptor instead.
func (*LogoData) Descriptor() ([]byte, []int) {
	return file_aws_proto_rawDescGZIP(), []int{2}
}

func (m *LogoData) GetData() isLogoData_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *LogoData) GetOrgToken() string {
	if x, ok := x.GetData().(*LogoData_OrgToken); ok {
		return x.OrgToken
	}
	return ""
}

func (x *LogoData) GetImageData() []byte {
	if x, ok := x.GetData().(*LogoData_ImageData); ok {
		return x.ImageData
	}
	return nil
}

type isLogoData_Data interface {
	isLogoData_Data()
}

type LogoData_OrgToken struct {
	OrgToken string `protobuf:"bytes,1,opt,name=org_token,json=orgToken,proto3,oneof"`
}

type LogoData_ImageData struct {
	ImageData []byte `protobuf:"bytes,2,opt,name=image_data,json=imageData,proto3,oneof"`
}

func (*LogoData_OrgToken) isLogoData_Data() {}

func (*LogoData_ImageData) isLogoData_Data() {}

type LogoDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileLocation string `protobuf:"bytes,1,opt,name=file_location,json=fileLocation,proto3" json:"file_location,omitempty"`
}

func (x *LogoDataReply) Reset() {
	*x = LogoDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aws_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoDataReply) ProtoMessage() {}

func (x *LogoDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_aws_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoDataReply.ProtoReflect.Descriptor instead.
func (*LogoDataReply) Descriptor() ([]byte, []int) {
	return file_aws_proto_rawDescGZIP(), []int{3}
}

func (x *LogoDataReply) GetFileLocation() string {
	if x != nil {
		return x.FileLocation
	}
	return ""
}

var File_aws_proto protoreflect.FileDescriptor

var file_aws_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x77, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x1a, 0x0a, 0x06, 0x51, 0x52, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03,
	0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x22, 0x2a,
	0x0a, 0x0b, 0x51, 0x52, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x0a, 0x08, 0x4c, 0x6f,
	0x67, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x09, 0x6f, 0x72, 0x67, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x6f, 0x72, 0x67,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x34,
	0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x23, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0x4a, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x52,
	0x43, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x52, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x51, 0x52, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x32, 0x4c, 0x0a, 0x11, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x6f, 0x67, 0x6f, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c,
	0x6f, 0x67, 0x6f, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x6f,
	0x44, 0x61, 0x74, 0x61, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67,
	0x6f, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x28, 0x01, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_aws_proto_rawDescOnce sync.Once
	file_aws_proto_rawDescData = file_aws_proto_rawDesc
)

func file_aws_proto_rawDescGZIP() []byte {
	file_aws_proto_rawDescOnce.Do(func() {
		file_aws_proto_rawDescData = protoimpl.X.CompressGZIP(file_aws_proto_rawDescData)
	})
	return file_aws_proto_rawDescData
}

var file_aws_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_aws_proto_goTypes = []interface{}{
	(*QRData)(nil),        // 0: proto.QRData
	(*QRDataReply)(nil),   // 1: proto.QRDataReply
	(*LogoData)(nil),      // 2: proto.LogoData
	(*LogoDataReply)(nil), // 3: proto.LogoDataReply
}
var file_aws_proto_depIdxs = []int32{
	0, // 0: proto.CreateQRCodeService.CreateQRCode:input_type -> proto.QRData
	2, // 1: proto.UploadLogoService.UploadLogo:input_type -> proto.LogoData
	1, // 2: proto.CreateQRCodeService.CreateQRCode:output_type -> proto.QRDataReply
	3, // 3: proto.UploadLogoService.UploadLogo:output_type -> proto.LogoDataReply
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_aws_proto_init() }
func file_aws_proto_init() {
	if File_aws_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_aws_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QRData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QRDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aws_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_aws_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*LogoData_OrgToken)(nil),
		(*LogoData_ImageData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aws_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_aws_proto_goTypes,
		DependencyIndexes: file_aws_proto_depIdxs,
		MessageInfos:      file_aws_proto_msgTypes,
	}.Build()
	File_aws_proto = out.File
	file_aws_proto_rawDesc = nil
	file_aws_proto_goTypes = nil
	file_aws_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CreateQRCodeServiceClient is the client API for CreateQRCodeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CreateQRCodeServiceClient interface {
	CreateQRCode(ctx context.Context, in *QRData, opts ...grpc.CallOption) (*QRDataReply, error)
}

type createQRCodeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCreateQRCodeServiceClient(cc grpc.ClientConnInterface) CreateQRCodeServiceClient {
	return &createQRCodeServiceClient{cc}
}

func (c *createQRCodeServiceClient) CreateQRCode(ctx context.Context, in *QRData, opts ...grpc.CallOption) (*QRDataReply, error) {
	out := new(QRDataReply)
	err := c.cc.Invoke(ctx, "/proto.CreateQRCodeService/CreateQRCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CreateQRCodeServiceServer is the server API for CreateQRCodeService service.
type CreateQRCodeServiceServer interface {
	CreateQRCode(context.Context, *QRData) (*QRDataReply, error)
}

// UnimplementedCreateQRCodeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCreateQRCodeServiceServer struct {
}

func (*UnimplementedCreateQRCodeServiceServer) CreateQRCode(context.Context, *QRData) (*QRDataReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateQRCode not implemented")
}

func RegisterCreateQRCodeServiceServer(s *grpc.Server, srv CreateQRCodeServiceServer) {
	s.RegisterService(&_CreateQRCodeService_serviceDesc, srv)
}

func _CreateQRCodeService_CreateQRCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QRData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreateQRCodeServiceServer).CreateQRCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CreateQRCodeService/CreateQRCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreateQRCodeServiceServer).CreateQRCode(ctx, req.(*QRData))
	}
	return interceptor(ctx, in, info, handler)
}

var _CreateQRCodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.CreateQRCodeService",
	HandlerType: (*CreateQRCodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateQRCode",
			Handler:    _CreateQRCodeService_CreateQRCode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "aws.proto",
}

// UploadLogoServiceClient is the client API for UploadLogoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UploadLogoServiceClient interface {
	UploadLogo(ctx context.Context, opts ...grpc.CallOption) (UploadLogoService_UploadLogoClient, error)
}

type uploadLogoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUploadLogoServiceClient(cc grpc.ClientConnInterface) UploadLogoServiceClient {
	return &uploadLogoServiceClient{cc}
}

func (c *uploadLogoServiceClient) UploadLogo(ctx context.Context, opts ...grpc.CallOption) (UploadLogoService_UploadLogoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UploadLogoService_serviceDesc.Streams[0], "/proto.UploadLogoService/UploadLogo", opts...)
	if err != nil {
		return nil, err
	}
	x := &uploadLogoServiceUploadLogoClient{stream}
	return x, nil
}

type UploadLogoService_UploadLogoClient interface {
	Send(*LogoData) error
	CloseAndRecv() (*LogoDataReply, error)
	grpc.ClientStream
}

type uploadLogoServiceUploadLogoClient struct {
	grpc.ClientStream
}

func (x *uploadLogoServiceUploadLogoClient) Send(m *LogoData) error {
	return x.ClientStream.SendMsg(m)
}

func (x *uploadLogoServiceUploadLogoClient) CloseAndRecv() (*LogoDataReply, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(LogoDataReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// UploadLogoServiceServer is the server API for UploadLogoService service.
type UploadLogoServiceServer interface {
	UploadLogo(UploadLogoService_UploadLogoServer) error
}

// UnimplementedUploadLogoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUploadLogoServiceServer struct {
}

func (*UnimplementedUploadLogoServiceServer) UploadLogo(UploadLogoService_UploadLogoServer) error {
	return status.Errorf(codes.Unimplemented, "method UploadLogo not implemented")
}

func RegisterUploadLogoServiceServer(s *grpc.Server, srv UploadLogoServiceServer) {
	s.RegisterService(&_UploadLogoService_serviceDesc, srv)
}

func _UploadLogoService_UploadLogo_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(UploadLogoServiceServer).UploadLogo(&uploadLogoServiceUploadLogoServer{stream})
}

type UploadLogoService_UploadLogoServer interface {
	SendAndClose(*LogoDataReply) error
	Recv() (*LogoData, error)
	grpc.ServerStream
}

type uploadLogoServiceUploadLogoServer struct {
	grpc.ServerStream
}

func (x *uploadLogoServiceUploadLogoServer) SendAndClose(m *LogoDataReply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *uploadLogoServiceUploadLogoServer) Recv() (*LogoData, error) {
	m := new(LogoData)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _UploadLogoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.UploadLogoService",
	HandlerType: (*UploadLogoServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "UploadLogo",
			Handler:       _UploadLogoService_UploadLogo_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "aws.proto",
}
